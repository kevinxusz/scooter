# -*- mode:python -*-
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
# This file is a part of the Scooter project (http://sctr.sf.net). 
#
# libpng/SConscript -- construction file for libpng
#

import os 
import string

Import('env', 'version')

env = env.Clone()

env.Append(CPPPATH = ['#blib/include'])
env.Append(CPPDEFINES = [ 'PNG_BUILD_DLL' ])

env.Append(CFLAGS = ['-mthreads'])

env.Append(LIBPATH = ['#blib/lib'])
env.Append(LDFLAGS = ['-mthreads', '-mconsole'])

variant = env.subst('$VARIANT')
env.VariantDir(variant, '../ext/libpng')

pnglibconf = env.Substfile(
    source = '../ext/libpng/scripts/pnglibconf.h.prebuilt',
    target = os.path.join(variant, 'pnglibconf.h') )

srclist = map( lambda fname: os.path.join(variant,fname), 
               [ 'png.c',
                 'pngerror.c',
                 'pngget.c',
                 'pngmem.c',
                 'pngpread.c',
                 'pngread.c',
                 'pngrio.c',
                 'pngrtran.c',
                 'pngrutil.c',
                 'pngset.c',
                 'pngtrans.c',
                 'pngwio.c',
                 'pngwrite.c',
                 'pngwtran.c',
                 'pngwutil.c' ] )

inclist =  map( lambda fname: os.path.join(variant,fname), 
               [ 'png.h', 'pngconf.h', 'pnglibconf.h' ] )

zlib_name = env.subst('${CRSHPREFIX}zlib')
libpng_name = env.subst('${CRSHPREFIX}libpng')

libpng = env.SharedLibrary(
    target = os.path.join(variant,libpng_name), 
    source = srclist,
    LIBS = [ zlib_name ]
)

env.Install('#blib/bin', libpng[0])
env.Install('#blib/lib', libpng[1])
env.Install('#blib/include', inclist)

#
# SConscript -- end of file
#

