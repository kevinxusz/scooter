# -*- CPerl -*-
#
# $Id$
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
# This file is a part of the Scooter project. 
#
# Copyright (c) 2004. Dimitry Kloper <dimka@cs.technion.ac.il> . 
# Technion, Israel Institute of Technology. Computer Science Department.
#
# Conscript -- Conscript file for libjpeg
#

use Data::Dumper;
use Cons::Template;
use Cons::Common;

Import qw(BLIB toolset options version);

my $ruleset  = $toolset->env();

die if( !defined( $ruleset ) );

our $BUILD      = $toolset->option( 'build' );
our $INCLUDE    = [ "$BLIB/include" ];
our $DEFINE     = [ "-DJPEG_DLL" ];

Link $BUILD => 'src';

$ruleset->{'LDFLAGS'} .= 
  q( -mthreads -Wl,-enable-stdcall-fixup) . 
  q( -Wl,-enable-auto-import -Wl,-enable-runtime-pseudo-reloc);
map { $ruleset->{'CFLAGS'} .= " $_"; } @$DEFINE;

our $buildenv   = new cons( %{$ruleset},
			    'CPPPATH' => $INCLUDE );

my $DLLTGT = "$BUILD/cr" . $version->get('hash')->{'stable'} . 
             "jpeg%{SUFDLL}";
my $LIBTGT = "$BUILD/%{PREFLIB}jpeg%{SUFLIB}";

KeepPrecious $buildenv $DLLTGT;
KeepPrecious $buildenv $LIBTGT;

my @srclist =
  map( "$BUILD/$_", 
       qw( cdjpeg.c
	   jcapimin.c
	   jcapistd.c
	   jccoefct.c
	   jccolor.c
	   jcdctmgr.c
	   jchuff.c
	   jcinit.c
	   jcmarker.c
	   jcmaster.c
           jcmainct.c
	   jcomapi.c
	   jcparam.c
	   jcphuff.c
	   jcprepct.c
	   jcsample.c
	   jctrans.c
	   jdapimin.c
	   jdapistd.c
	   jdatadst.c
	   jdatasrc.c
	   jdcoefct.c
	   jdcolor.c
	   jddctmgr.c
	   jdhuff.c
	   jdinput.c
	   jdmainct.c
	   jdmarker.c
	   jdmaster.c
	   jdmerge.c
	   jdphuff.c
	   jdpostct.c
	   jdsample.c
	   jdtrans.c
	   jerror.c
	   jfdctflt.c
	   jfdctfst.c
	   jfdctint.c
	   jidctflt.c
	   jidctfst.c
	   jidctint.c
	   jidctred.c
	   jmemmgr.c
	   jmemnobs.c
	   jquant1.c
	   jquant2.c
	   jutils.c
	   rdbmp.c
	   rdcolmap.c
	   rdgif.c
	   rdppm.c
	   rdrle.c
	   rdswitch.c
	   rdtarga.c
	   transupp.c
	   wrbmp.c
	   wrgif.c
	   wrppm.c
	   wrrle.c
	   wrtarga.c ) );

Modules $buildenv [$DLLTGT, $LIBTGT], @srclist, 
  qq(%CC -shared %LDFLAGS -o ) . 
  FilePathEnv($buildenv,$DLLTGT) . 
  qq( -Wl,--out-implib,) . 
  FilePathEnv($buildenv,$LIBTGT) . 
  qq( %< %_LDIRS %LIBS);

Install $buildenv "$BLIB/include", 
  map( "$BUILD/$_", qw( jpeglib.h jmorecfg.h jconfig.h ) );

Install $buildenv "$BLIB/lib", $LIBTGT;
Install $buildenv "$BLIB/bin", $DLLTGT;

#
# Conscript -- end of file
#

